[project]
name = "everywhere"
version = "0.1.0"
description = "Fast & local semantic search engine"
readme = "README.md"
requires-python = ">=3.11,<3.13"
dependencies = [
    "onnxruntime>=1.22.1",
    "numpy>=2.3.2",
    "more-itertools>=10.8.0",
    "pydantic>=2.11.7",
    "textual>=6.1.0",
    "voyager>=2.1.0",
    "watchdog>=6.0.0",
    "markitdown[pdf,docx,pptx]>=0.1.2",
    "rapidocr>=3.4.0",
    "pymupdf>=1.26.4",
    "charset-normalizer>=3.4.3",
    "platformdirs>=4.4.0",
    "huggingface-hub>=0.34.4",
    "tokenizers>=0.22.0",
]

[project.scripts]
everywhere = "everywhere.app.app:main"

[dependency-groups]
dev = [
    "ipykernel>=6.30.1",
    "ipywidgets>=8.1.7",
    "ruff>=0.12.12",
    "seaborn>=0.13.2",
    "textual-dev>=1.7.0",
    "huggingface-hub[cli]>=0.30.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "D",      # pydocstyle
    "W",      # pycodestyle warnings
    "E",      # pycodestyle errors
    "N",      # pep8-naming
    "I",      # isort
    "ANN001", # Missing type annotation for function argument
    "ANN2",   # Missing type annotation for return value
    "F",      # Pyflakes
    "UP",     # pyupgrade
    "RUF",    # Ruff checks
    "A",      # flake8-builtins (shadowing a Python builtin)
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
    "Q",      # flake8-quotes
    "PIE",    # flake8-pie
    "T10",    # flake8-debugger
    "TCH",    # flake8-type-checking
    "TID",    # flake8-tidy-imports
    "EXE",    # flake8-executable
    "G",      # flake8-logging-format
    "INT",    # flake8-gettext
    "ISC",    # flake8-implicit-str-concat
    "FLY",    # flynt
    "NPY",    # NumPy-specific rules
    "PD",     # pandas-vet
    "PERF",   # Perflint
    "PGH",    # pygrep-hooks
]

ignore = [
    "PGH002", # duplicate with G010
    "PGH003", # we want to just use `type: ignore`
    "TID252", # relative imports
    "G004",   # f-strings in logging
    "EXE002", # shebang
    "B009",   # getattr
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "D101", "I001"]
"**/*.ipynb" = ["ALL"]
"tests/*" = ["E501", "F401", "F811"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true

[tool.ruff.format]
line-ending = "lf"
